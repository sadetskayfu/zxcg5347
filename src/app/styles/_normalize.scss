// Нормализация блочной модели
*,
::before,
::after {
	box-sizing: border-box;
}

// Убираем внутренние отступы слева тегам списков, у которых есть атрибут class
:where(ul, ol):where([class]) {
	padding-left: 0;
}

// Убираем внешние отступы body и двум другим тегам, у которых есть атрибут class
body,
:where(blockquote, figure):where([class]) {
	margin: 0;
}

// Убираем внешние отступы вертикали нужным тегам, у которых есть атрибут class
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
	margin-block: 0;
}

:where(dd[class]) {
	margin-left: 0;
}

:where(fieldset[class]) {
	margin-left: 0;
	padding: 0;
	border: none;
}

// Убираем стандартный маркер маркированному списку, у которого есть атрибут class
:where(ul[class]) {
	list-style: none;
}

:where(li[class]) {
	list-style: none;
}

:where(address[class]) {
	font-style: normal;
}

// Обнуляем вертикальные внешние отступы параграфа,
p {
	margin-block: 0;
}

a {
	text-decoration: none;
}

legend {
	padding: 0px;
}

// Упрощаем работу с изображениями
img {
	display: block;
	max-width: 100%;
	height: auto;
}

// Наследуем свойства шрифт для полей ввода
input,
textarea,
select,
button {
	font: inherit;
}

html {
	// Пригодится в большинстве ситуаций (когда, например, нужно будет "прижать" футер к низу сайта)
	height: 100%;
	// Убираем скачок интерфейса при появление скроллбара
	//scrollbar-gutter: stable;
}

// Плавный скролл
html,
:has(:target) {
	scroll-behavior: smooth;
}

body {
	// Пригодится в большинстве ситуаций (когда, например, нужно будет "прижать" футер к низу сайта)
	min-height: 100%;
	// Унифицированный интерлиньяж
	line-height: 1.5;
}

// Чиним баг задержки смены цвета при взаимодействии с svg-элементами
svg * {
	transition-property: fill, stroke;
}

// Удаляем базовую анимацию клика на мобильных устройствах
*:focus,
*:active {
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

// Удаляем базовые стили фокуса элемента
*:focus {
	outline: none;
}
